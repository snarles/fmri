% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline.R
\name{identification_pipeline1}
\alias{identification_pipeline1}
\title{Automates fitting forward/backward models and scoring}
\usage{
identification_pipeline1(X, Y, X_te, y_star, i_chosen,
  filter_method = no_filter, filter_params = list(),
  forward_method = fit_ridge_kernel, forward_params = list(),
  Sigma_e_method = residual_offdiag, Sigma_e_params = list(),
  Sigma_t_method = assume_iid, Sigma_t_params = list(),
  Sigma_b_method = assume_iid_B, Sigma_b_params = list(),
  backward_method = pre_mle, backward_params = list(),
  scoring_method = topk_score, scoring_params = list(), mc.cores = 1, ...)
}
\arguments{
\item{X}{design matrix}

\item{Y}{response matrix}

\item{X_te}{Test class covariates}

\item{y_star}{Responses to be classified}

\item{i_chosen}{True classes}

\item{filter_method}{(function) Which variable selection method}

\item{filter_params}{(list) Additional arguments for variable selection}

\item{forward_method}{(function) Which forward model}

\item{forward_params}{(list) Additional arguments for forward model}

\item{Sigma_e_method}{(function) Which covariance estimation method}

\item{Sigma_e_params}{(list) Additional arguments for covariance estimation}

\item{Sigma_t_method}{(function) Which covariance estimation method}

\item{Sigma_t_params}{(list) Additional arguments for covariance estimation}

\item{Sigma_b_method}{(function) Empirical bayes heuristic for choosing B prior}

\item{Sigma_b_params}{(list) Additional arguments for Sigma_b estimation}

\item{backward_method}{(function) Which forward model}

\item{backward_params}{(list) Additional arguments for forward model}

\item{scoring_method}{(function) Which forward model}

\item{scoring_params}{(list) Additional arguments for forward model}

\item{mc.cores}{Number of parallel cores to use}
}
\value{
A list containing model fits and classification results
}
\description{
Pipeline 1 involves a single variable-selection (filter) pass over the data
and a single forward model fitting step, covariance fitting step,
and backwards modeling step.
}
\examples{
pars <- gen_params(n = 50, pY = 20, pX = 30, n_te = 100)
dat <- do.call(gen_data, pars)
zattach(dat)
"ML approach"
ml_res <- identification_pipeline1(X, Y, X_te, y_star, i_chosen,
  filter_method = no_filter, forward_method = fit_elnet_CV,
  Sigma_e_method = residual_offdiag, Sigma_t_method = assume_iid,
  backward_method = pre_mle, scoring_method = topk_score,
  mc.cores = 3)
ml_res$score
"Empirical Bayes"
ep_res <- identification_pipeline1(X, Y, X_te, y_star, i_chosen,
  filter_method = filter_eigenprism, forward_method = fit_elnet_CV,
  Sigma_e_method = residual_offdiag, Sigma_t_method = assume_iid,
  Sigma_b_method = use_eigenprism,
  backward_method = pre_Bayes,
  scoring_method = topk_score,
  mc.cores = 3)
ep_res$score
"Oracle Bayes rule"
bayesrule <- identification_pipeline1(X, Y, X_te, y_star, i_chosen,
  filter_method = no_filter, forward_method = fit_elnet_CV,
  Sigma_e_method = residual_offdiag, Sigma_t_method = assume_iid,
  backward_method = pre_Bayes,
  backward_params = list(Sigma_b = Sigma_b, Sigma_e = Sigma_e,
    Sigma_t = Sigma_t),
  scoring_method = topk_score,
  mc.cores = 3)
bayesrule$score
}

